unit Login_u;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Edit, FMX.Controls.Presentation, Radnik_u, DataModule_u;

type
  TForm2 = class(TForm)
    Label1: TLabel;
    Edit1: TEdit;
    btnLogin: TButton;
    procedure btnLoginClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.fmx}
{$R *.LgXhdpiPh.fmx ANDROID}

procedure TForm2.btnLoginClick(Sender: TObject);
var
  Password: Integer;
  ReceivedWorkerID: Integer;
begin
  if not TryStrToInt(Trim(Edit1.Text), Password) then
  begin
    ShowMessage('Please enter a valid numeric password.');
    Exit;
  end;

  if not DataModule1.IdTCPClient1.Connected then
    DataModule1.StartClientConnection;

  DataModule1.IdTCPClient1.IOHandler.Write(Int32(Password));

  try
  ReceivedWorkerID := DataModule1.IdTCPClient1.IOHandler.ReadInt32;
  except
    on E: Exception do
    begin
    ShowMessage('Failed to read from server: '+ E.Message);
    Exit;
    end;
  end;

  {if ReceivedWorkerID <> -1 then
  begin
    ShowMessage('Login successful! Worker ID: ' + IntToStr(ReceivedWorkerID));
    MainForm := TMainForm.Create(Self);
    MainForm.Show;
    Form2.Close;
  end
  else
  begin
    ShowMessage('Login failed: Password not found.');
  end; }

  if (ReceivedWorkerID > 0) and (ReceivedWorkerID < 100000) then // sanity check
begin
  ShowMessage('Login successful! Worker ID: ' + IntToStr(ReceivedWorkerID));
end
else
  ShowMessage('Login failed or invalid response.');

end;

end.
